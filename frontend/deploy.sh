#!/bin/bash

set -e

# === –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ ===
STACK_NAME="interviewer-ui"
TEMPLATE_FILE="template.yaml"
BUCKET_NAME="ai-interviewer-atelenko"
DISTRIBUTION_ID="E2E9YZ63DI1NIO"  # ‚Üê –≤—Å—Ç–∞–≤ –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ –¥–µ–ø–ª–æ—é

# === –ü–æ–±—É–¥–æ–≤–∞ CRA (—è–∫—â–æ —î package.json)
if [ -f "package.json" ]; then
  echo "üì¶ Building React app..."
  npm run build
fi

# === –î–µ–ø–ª–æ–π CloudFormation —à–∞–±–ª–æ–Ω—É
echo "‚òÅÔ∏è Deploying CloudFormation stack: $STACK_NAME ..."
aws cloudformation deploy \
  --template-file "$TEMPLATE_FILE" \
  --stack-name "$STACK_NAME" \
  --capabilities CAPABILITY_NAMED_IAM

# === –í–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è CloudFront Distribution ID (–æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ)
if [ -z "$DISTRIBUTION_ID" ]; then
  echo "üîç Getting CloudFront Distribution ID..."
  DISTRIBUTION_ID=$(aws cloudformation describe-stacks \
    --stack-name "$STACK_NAME" \
    --query "Stacks[0].Outputs[?OutputKey=='CloudFrontURL'].OutputValue" \
    --output text \
    | awk -F/ '{print $3}' | sed 's/\.cloudfront\.net//')
  echo "‚úÖ Found Distribution ID: $DISTRIBUTION_ID"
fi

# === –ó–∞–ª–∏–≤–∫–∞ dist –≤ S3
echo "üöÄ Uploading dist to S3: $BUCKET_NAME ..."
aws s3 sync dist/ "s3://$BUCKET_NAME" --delete

# === –Ü–Ω–≤–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–µ—à—É CloudFront
echo "üßπ Invalidating CloudFront cache..."
aws cloudfront create-invalidation \
  --distribution-id "$DISTRIBUTION_ID" \
  --paths "/*"

echo "‚úÖ Done! Site deployed."
